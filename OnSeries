/*
OBJECTIVE: BOOK SERIES
SHOWCASE: CASE STATEMENTS, CTE'S, NUMERIC FUNCTIONS, STRING FUNCTIONS
*/





---------------------------------------------------------------------------
----- BRIDGERTON SERIES
---------------------------------------------------------------------------


CREATE TABLE   `booklists.bridgerton_series`
         (Book_Author STRING,
          Book_Serie STRING,
          Book_Order INTEGER,
          Book_Title STRING,
          Page_Count INTEGER,
          Protagonist STRING,
          Protagonist_Gender STRING,
          Protagonist_Age INTEGER,
          Deuteragonist STRING,
          Deuteragonist_Gender STRING,
          Deuteragonist_Age INTEGER)





---------------------------------------------------------------------------

----- INSERT INTO FROM INITIAL TABLES.


INSERT INTO   `booklists.bridgerton_series` 
         (Book_Author, Book_Serie, Book_Title, Page_Count)
SELECT   Book_Author, Book_Series, Book_Title, Page_Counts
FROM     `booklists.books_2021`
WHERE    Book_Series = "Bridgerton"

INSERT INTO   `booklists.bridgerton_series` 
         (Book_Author, Book_Serie, Book_Title, Page_Count)
SELECT   Book_Author, Book_Series, Book_Title, Page_Counts
FROM     `booklists.books_2022`
WHERE    Book_Series = "Bridgerton"





---------------------------------------------------------------------------
----- DATA COMPLETION
---------------------------------------------------------------------------


UPDATE   `booklists.bridgerton_series` 
SET      Book_Order = 1, Protagonist = "Daphne", Protagonist_Gender = "F", Protagonist_Age = 21,
         Deuteragonist = "Simon Basset", Deuteragonist_Gender = "M", Deuteragonist_Age = 29
WHERE    Book_Title = "The Duke and I"

UPDATE   `booklists.bridgerton_series` 
SET      Book_Order = 2, Protagonist = "Anthony", Protagonist_Gender = "M", Protagonist_Age = 29,
         Deuteragonist = "Kate Sheffield", Deuteragonist_Gender = "F", Deuteragonist_Age = 21
WHERE    Book_Title = "The Viscount Who Loved Me"

UPDATE   `booklists.bridgerton_series` 
SET      Book_Order = 3, Protagonist = "Benedict", Protagonist_Gender = "M", Protagonist_Age = 30,
         Deuteragonist = "Sophie Beckett", Deuteragonist_Gender = "F", Deuteragonist_Age = 22
WHERE    Book_Title = "An Offer From A Gentleman"

UPDATE   `booklists.bridgerton_series` 
SET      Book_Order = 4, Protagonist = "Colin", Protagonist_Gender = "M", Protagonist_Age = 33,
         Deuteragonist = "Penelope Featherington", Deuteragonist_Gender = "F", Deuteragonist_Age = 28
WHERE    Book_Title = "Romancing Mr. Bridgerton"

UPDATE   `booklists.bridgerton_series` 
SET      Book_Order = 5, Protagonist = "Eloise", Protagonist_Gender = "F", Protagonist_Age = 28,
         Deuteragonist = "Phillip Crane", Deuteragonist_Gender = "M", Deuteragonist_Age = 30
WHERE    Book_Title = "To Sir Phillip, With Love"


UPDATE   `booklists.bridgerton_series` 
SET      Book_Order = 6, Protagonist = "Francesca", Protagonist_Gender = "F", Protagonist_Age = 26,
         Deuteragonist = "Michael Stirling", Deuteragonist_Gender = "M", Deuteragonist_Age = 33
WHERE    Book_Title = "When He Was Wicked"

UPDATE   `booklists.bridgerton_series` 
SET      Book_Order = 7, Protagonist = "Hyacinth", Protagonist_Gender = "F", Protagonist_Age = 22,
         Deuteragonist = "Gareth St. Clair", Deuteragonist_Gender = "M", Deuteragonist_Age = 28
WHERE    Book_Title = "It's In His Kiss"


----------


INSERT INTO    `booklists.bridgerton_series` 
         (Book_Author, Book_Serie, Book_Order, Book_Title, Page_Count,
          Protagonist, Protagonist_Gender, Protagonist_Age, 
          Deuteragonist, Deuteragonist_Gender, Deuteragonist_Age)
VALUES   ("Julia Quinn", "Bridgerton", 8, "On The Way To The Wedding", 496,
          "Gregory", "M", 26, "Lucy Abernathy", "F", 20)





---------------------------------------------------------------------------

----- UPDATE ON [Protagonist].


UPDATE   `booklists.bridgerton_series`
SET      Protagonist = CONCAT(Protagonist, " Bridgerton")
WHERE    Book_Serie = "Bridgerton"





---------------------------------------------------------------------------
----- DATA EXPLORATION
---------------------------------------------------------------------------


---------------------------------------------------------------------------

----- OBJECTIVE (1): CHARACTER'S TITLES.


SELECT   Book_Title, Protagonist,
         CASE
         WHEN   Protagonist LIKE "Anthony%" THEN "Viscount Bridgerton"
         WHEN   Protagonist LIKE "Daphne%" THEN "Duchess of Hastings"
         WHEN   Protagonist LIKE "Eloise%" THEN "Lady Crane"
         WHEN   Protagonist LIKE "Francesca%" THEN "Countess of Kilmartin"
         WHEN   Protagonist LIKE "Hyacinth%" THEN "Baroness St. Clair"
         ELSE   NULL
         END    AS Protagonist_Title,
         Deuteragonist,
         CASE
         WHEN   Deuteragonist LIKE "Kate%" THEN "Viscountess Bridgerton"
         WHEN   Deuteragonist LIKE "Penelope%" THEN "Lady Whistledown"
         WHEN   Deuteragonist LIKE "Simon%" THEN "Duke of Hastings"
         WHEN   Deuteragonist LIKE "Phillip%" THEN "Sir Phillip Crane"
         WHEN   Deuteragonist LIKE "Michael%" THEN "Earl of Kilmartin"
         WHEN   Deuteragonist LIKE "Lucy%" THEN "Lady Lucinda"
         WHEN   Deuteragonist LIKE "Gareth%" THEN "Baron St. Clair"
         ELSE   NULL
         END    AS Deuteragonist_Title
FROM     `booklists.bridgerton_series`
ORDER BY Protagonist





---------------------------------------------------------------------------

----- OBJECTIVE (2): AGE GAPS BETWEEN [Protagonist] AND [Deuteragonist] OF EACH BOOK.


SELECT   Book_Title, Protagonist, Deuteragonist, ABS(Protagonist_Age - Deuteragonist_Age) AS Age_Gap
FROM     `booklists.bridgerton_series`
ORDER BY Protagonist










---------------------------------------------------------------------------
----- ROBERT LANGDON SERIES
---------------------------------------------------------------------------


CREATE TABLE   `booklists.robert_langdon_series`
         (Book_Author STRING,
          Book_Serie STRING,
          Book_Order INTEGER,
          Book_Title STRING,
          Page_Count INTEGER,
          Protagonist STRING,
          Deuteragonist STRING,
          Setting_City STRING,
          Setting_Country STRING,
          Movie_Adaptation STRING,
          Box_Office INTEGER)





---------------------------------------------------------------------------

----- INSERT INTO FROM INITIAL TABLES.


INSERT INTO   `booklists.robert_langdon_series` 
         (Book_Author, Book_Serie, Book_Title, Page_Count, Movie_Adaptation)
SELECT   Book_Author, Book_Series, Book_Title, Page_Counts, Movie_Adaptation
FROM     `booklists.books_2019` 
WHERE    Book_Series = "Robert Langdon" 

INSERT INTO   `booklists.robert_langdon_series` 
         (Book_Author, Book_Serie, Book_Title, Page_Count, Movie_Adaptation)
SELECT   Book_Author, Book_Series, Book_Title, Page_Counts, Movie_Adaptation
FROM     `booklists.books_2020` 
WHERE    Book_Series = "Robert Langdon" AND Reading_Language = "English"

INSERT INTO   `booklists.robert_langdon_series` 
         (Book_Author, Book_Serie, Book_Title, Page_Count, Movie_Adaptation)
SELECT   Book_Author, Book_Series, Original_Title, Page_Counts, Movie_Adaptation
FROM     `booklists.books_2020` 
WHERE    Book_Series = "Robert Langdon" AND Reading_Language = "German"

INSERT INTO   `booklists.robert_langdon_series` 
         (Book_Author, Book_Serie, Book_Title, Page_Count, Movie_Adaptation)
SELECT   Book_Author, Book_Series, Original_Title, Page_Counts, Movie_Adaptation
FROM     `booklists.books_years_unknown`
WHERE    Book_Series = "Robert Langdon" 




---------------------------------------------------------------------------

----- UPDATE ON [Protagonist].

UPDATE   `booklists.robert_langdon_series` 
SET      Protagonist = Book_Serie
WHERE    Book_Serie = "Robert Langdon" 





---------------------------------------------------------------------------
----- DATA COMPLETION
---------------------------------------------------------------------------


SELECT   Book_Title, Book_Theme, LENGTH(Book_Theme) Num_Char, INSTR(Book_Theme, ";") Position
FROM     `booklists.books_2019` 
WHERE    Book_Series = "Robert Langdon"

SELECT   SPLIT(SUBSTR(Book_Theme, (40+2), (66-40+2)), ", ") Settings
FROM     `booklists.books_2019` 
WHERE    Book_Series = "Robert Langdon"

UPDATE   `booklists.robert_langdon_series` 
SET      Book_Order = 1, Deuteragonist = "Vittoria Vetra",
         Setting_City = "Rome, Vatican City", Setting_Country = "Italy",
         Box_Office = 485930810
WHERE    Book_Title = "Angels & Demons" 


----------


SELECT   Book_Title, Book_Theme, LENGTH(Book_Theme) Num_Char, INSTR(Book_Theme, ";") Position
FROM     `booklists.books_years_unknown`
WHERE    Book_Series = "Robert Langdon"

SELECT   SPLIT(SUBSTR(Book_Theme, (11+2), (79-11+2)), "; ") Settings
FROM     `booklists.books_years_unknown`
WHERE    Book_Series = "Robert Langdon"

UPDATE   `booklists.robert_langdon_series` 
SET      Book_Order = 2, Deuteragonist = "Sophie Neveu",
         Setting_City = "Cond√©cort, London, Paris, Rosslyn", Setting_Country = "France, Scotland, United Kingdom",
         Box_Office = 767820459
WHERE    Book_Title = "The Da Vinci Code" 


----------


SELECT   Book_Title, Book_Theme, LENGTH(Book_Theme) Num_Char, INSTR(Book_Theme, ";") As Position, Movie_Adaptation
FROM     `booklists.books_2020`
WHERE    Book_Series = "Robert Langdon"
ORDER BY Reading_Order


----------


SELECT   SPLIT(SUBSTR(Book_Theme, (23+2), (40-23+2)), "; ") Settings
FROM     `booklists.books_2020`
WHERE    Original_Title = "The Lost Symbol"

UPDATE   `booklists.robert_langdon_series` 
SET      Book_Order = 3, Deuteragonist = "Katherine Solomon",
         Setting_City = "Washington, D.C.", Setting_Country = "United States"
WHERE    Book_Title = "The Lost Symbol" 


----------


SELECT   SPLIT(SUBSTR(Book_Theme, (35+2), (69-35+2)), "; ") Settings
FROM     `booklists.books_2020`
WHERE    Book_Title = "Inferno"

UPDATE   `booklists.robert_langdon_series` 
SET      Book_Order = 4, Deuteragonist = "Sienna Brooks",
         Setting_City = "Florence, Istanbul", Setting_Country = "Italy, Turkey",
         Box_Office = 219519367
WHERE    Book_Title = "Inferno"


----------


SELECT   SPLIT(SUBSTR(Book_Theme, (19+2), (62-19+2)), "; ") Settings
FROM     `booklists.books_2020`
WHERE    Book_Title = "Origin"

UPDATE   `booklists.robert_langdon_series` 
SET      Book_Order = 5, Deuteragonist = "Ambra Vidal",
         Setting_City = "Barcelona, Bilbao, Madrid, Seville", Setting_Country = "Spain"
WHERE    Book_Title = "Origin"





---------------------------------------------------------------------------

----- UPDATE ON [Publication].

ALTER TABLE    `booklists.robert_langdon_series`
ADD      Publication INTEGER

UPDATE   `booklists.robert_langdon_series`
SET      Publication = CASE
         WHEN Book_Order = 1 THEN 2000
         WHEN Book_Order = 2 THEN 2003
         WHEN Book_Order = 3 THEN 2009
         WHEN Book_Order = 3 THEN 2013
         ELSE 2017
         END





---------------------------------------------------------------------------
----- DATA EXPLORATION
---------------------------------------------------------------------------


---------------------------------------------------------------------------

----- OBJECTIVE (1): MOVIE ADAPTATIONS.


SELECT   Movie_Adaptation, INSTR(Movie_Adaptation, " (") Title_End, LENGTH(Movie_Adaptation) Num_char
FROM     `booklists.robert_langdon_series`
WHERE    Movie_Adaptation IS NOT NULL

SELECT   SUBSTR(Movie_Adaptation, (8+2), 4) AS Year,
         LEFT(Movie_Adaptation, 8) AS Movie, 
         CONCAT(FORMAT("%'d", Box_Office), "$") AS Box_Office,
         SPLIT(Setting_Country, ", ") AS Locations
FROM     `booklists.robert_langdon_series`
WHERE    Movie_Adaptation IS NOT NULL AND LENGTH(Movie_Adaptation) = 14
UNION ALL
SELECT   SUBSTR(Movie_Adaptation, (18+2), 4) AS Year,
         LEFT(Movie_Adaptation, 18) AS Movie, 
         CONCAT(FORMAT("%'d", Box_Office), "$") AS Box_Office,
         SPLIT(Setting_Country, ", ") AS Locations
FROM     `booklists.robert_langdon_series`
WHERE    Movie_Adaptation IS NOT NULL AND LENGTH(Movie_Adaptation) = 24
UNION ALL
SELECT   SUBSTR(Movie_Adaptation, (16+2), 4) AS Year,
         LEFT(Movie_Adaptation, 16) AS Movie, 
         CONCAT(FORMAT("%'d", Box_Office), "$") AS Box_Office,
         SPLIT(Setting_Country, ", ") AS Locations
FROM     `booklists.robert_langdon_series`
WHERE    Movie_Adaptation IS NOT NULL AND LENGTH(Movie_Adaptation) = 22
ORDER BY Year





---------------------------------------------------------------------------

----- OBJECTIVE (2): SETTING LOCATIONS.


/*
SELECT   Book_Title, SPLIT(Setting_City, ", ") AS Locations 
FROM     `booklists.robert_langdon_series`
ORDER BY Book_Order

----- ¬´Washington, D.C.¬ª IS NOT SUPPOSED TO BE SEPERATED.

SELECT   Book_Title, SPLIT(Setting_City, ", ") AS Locations
FROM     `booklists.robert_langdon_series`
WHERE    Setting_Country <> "United States"
UNION ALL
SELECT   Book_Title, Setting_City AS Locations
FROM     `booklists.robert_langdon_series`
WHERE    Setting_Country = "United States"
ORDER BY Book_Order

----- UNION ALL OR INTERSECT ALL ARE NOT APPLICABLE; INCOMPATIBLE TYPES DUE TO SPLIT() ‚Äì ARRAY<STRING>, STRING.
*/


UPDATE   `booklists.robert_langdon_series`
SET      Setting_City = REPLACE(Setting_City, ",", ";")
WHERE    Setting_Country <> "United States"

SELECT   Book_Title, SPLIT(Setting_City, "; ") AS Locations 
FROM     `booklists.robert_langdon_series`
ORDER BY Book_Order





